Metamorphic Relation (MR), Source Input, Initial Output, Transformation of the input, New Output Check
"MR1: Repeat Consistency", "GET /resource/123", "Resource 123 details", "Repeat GET /resource/123", "Both outputs should be identical"
"MR2: Reverse Order Check", "GET /items?orderBy=asc", "Items in ascending order", "GET /items?orderBy=desc", "Outputs should be in reverse order of each other"
"MR3: Filtered Subset", "GET /items", "All items", "GET /items?filter=type:A", "Filtered output should be a subset of the unfiltered output"
"MR4: Creation Validation", "POST /items with data {name: 'test'}", "Confirmation of item creation", "GET /items/test", "New item should exist in output"
"MR5: Deletion Validation", "DELETE /items/test", "Confirmation of item deletion", "GET /items/test", "Item should no longer exist in output"
"MR6: Update Validation", "PATCH /items/test with updatedValue", "Confirmation of item update", "GET /items/test", "Updated value should be reflected in output"
"MR7: Pagination Completeness", "GET /items?page=1&limit=10", "First 10 items", "GET /items?page=2&limit=10", "Combined output should cover all items assuming <= 20 items"
"MR8: Language Localization", "GET /items?lang=en", "Items with English descriptions", "GET /items?lang=fr", "Outputs should contain same items but possible language difference in descriptions"
"MR9: Timezone Consistency", "GET /logs?timezone=UTC", "Logs with UTC timestamps", "GET /logs?timezone=PST", "Entries are equivalent, timestamps adjusted for timezones"
"MR10: Default vs Explicit", "GET /items?limit=10", "First 10 items", "GET /items", "Assuming default limit is 10, responses should be identical"
"MR11: Redundancy Check", "POST same item to /items twice", "Confirmation of item creation", "GET /items", "Only one entry for the item should exist"
"MR12: Compression Check", "GET /items with compression", "Compressed list of items", "GET /items", "Decompressed first response should be identical to the second"
"MR13: Role-based Access", "GET /items as user", "Items visible to user", "GET /items as admin", "Admin might see additional items or details"
"MR14: Cache Consistency", "GET /items with caching enabled", "Cached list of items", "GET /items with caching disabled", "Both outputs should be identical"
"MR15: Versioning Consistency", "GET /v1/items", "Items in v1 format", "GET /v2/items", "Depending on API changes, different formats or additional data might be present"
"MR16: Conditional Fetch", "GET /items If-Modified-Since a certain date", "Items modified since the date", "GET /items", "First should be a subset of the second"
"MR17: Alias Endpoint", "GET /objects/123", "Object 123 details", "GET /items/123", "Responses should be identical if objects is an alias for items"
"MR18: Field Expansion", "GET /items?fields=name", "Items with only 'name' field", "GET /items", "First response should be subset of the second in terms of fields"
"MR19: Case Insensitivity", "GET /ITEMS", "All items (case-insensitive)", "GET /items", "Responses should be identical"
"MR20: Relationship Expansion", "GET /users/123 with expanded posts", "User 123 with expanded posts", "GET /users/123 and then GET /users/123/posts", "Combined data from two calls in the second input should match the single call in the first"
"MR21: Search Consistency", "Search /users?query='John'", "Users matching 'John'", "GET /users/John", "Search results should closely match direct GET"
"MR22: Error Handling", "GET /items/non-existent", "Error: item doesn't exist", "GET another non-existent resource", "Error message structures should be consistent"
"MR23: Complete Set", "GET /items?type=A and GET /items?type=B", "Items of type A and B", "GET /items", "Combined first two should be equivalent to the third"
"MR24: POST-GET Idempotence", "POST new item to /items then GET", "Item after POST", "POST same item to /items then GET", "Both GET responses should be identical"
"MR25: Redirection Validation", "GET /oldEndpoint", "Data from old endpoint", "GET /newEndpoint", "Responses should be identical if oldEndpoint redirects to newEndpoint"
"MR26: Link Following", "GET /items/123 with links", "Item 123 with links", "Manually follow links in the output", "All linked resources should be accessible"
"MR27: Query Param Ignorance", "GET /items?invalidParam=value", "Items ignoring invalid param", "GET /items", "Both outputs should be identical"
"MR28: Input Ignorance", "POST /items with extra irrelevant fields", "Item creation ignoring extra fields", "POST /items without those fields", "Both items should be created identically, ignoring irrelevant inputs"
"MR29: Field Order Invariance", "GET /items?fields=name,desc", "Items with 'name' then 'desc'", "GET /items?fields=desc,name", "Outputs should have identical data, possibly different order"
"MR30: Multi-value Consistency", "GET /items?filter=A,B", "Items filtered by A and B", "GET /items?filter=A UNION GET /items?filter=B", "Union of the two outputs in second input should match the first"
"MR31: Session Persistence", "Create session, perform operations, GET /items", "Items in session", "Repeat same operations in new session, GET /items", "Outputs should be identical"
"MR32: Rate Limit Gracefulness", "Make rapid successive GETs to /items", "Items until rate limited", "GET /items normally", "Responses should be identical unless rate limit is reached"
"MR33: Boundary Values", "GET /items?page=1", "First page of items", "GET /items?page=0", "Depending on API, the second might return an error or first page"
"MR34: Partial Update", "PATCH /items/123 with partial data", "Item 123 partially updated", "GET /items/123", "Only provided fields should change, others remain the same"
"MR35: Resource Specificity", "GET /items/123/comments", "Comments for item 123", "GET /comments?itemId=123", "Responses should be equivalent"
"MR36: Time Dependency", "GET /logs?before=T1", "Logs before time T1", "GET /logs?after=T1", "Combined, these should cover all logs around time T1 with no overlap"
"MR37: Authentication Dependent", "GET /items as authenticated user", "Items with user-specific details", "GET /items as guest", "First might have extra details over the second"
"MR38: Multi-Request Flow", "POST to create item, DELETE that item", "Confirmation of deletion", "GET the item", "Should return item not found"
"MR39: Checksum Verification", "GET /items with checksum", "Items with checksum value", "Recompute checksum locally on items", "Local checksum should match provided checksum"
"MR40: Expired Resource", "POST new resource, let it expire, GET resource", "Expired resource notification", "GET the resource immediately after POST", "The latter should fetch the resource before expiration"
"MR41: Bulk Operations", "Bulk POST 5 items to /items", "Confirmation for 5 items", "GET /items", "All 5 items should now be present"
"MR42: Stateless Verification", "Perform operations in session A, GET /items", "Items from session A", "Perform same operations in session B, GET /items", "Responses from both sessions should be identical, assuming statelessness"
"MR43: Data Type Consistency", "POST /items with integer as string", "Item created with integer", "POST /items with integer", "Both items should be consistent, data type differences handled gracefully"
"MR44: Backend Fallback", "GET /items from primary backend", "Items from primary", "GET /items forcing secondary backend", "Responses should be consistent, possibly slight timing differences"
"MR45: Distributed Systems Sync", "POST /item in region A", "Item confirmed in region A", "GET /item in region B after sync delay", "Item should be present in both regions post sync"
"MR46: Parallel Requests", "Send parallel GET requests to /items", "Items fetched in parallel", "GET /items sequentially", "Responses should be identical"
"MR47: Length Limitations", "POST very long data to /items", "Error or truncated data response", "POST short data to /items", "Responses should differ based on length processing"
"MR48: Dependent Operations", "DELETE /parentItem which has /childItems", "Confirmation of deletion", "GET /childItems", "Depending on system, might error if parent is a necessary context"
"MR49: Backwards Compatibility", "GET /items using old API client", "Items in old format", "GET /items using new API client", "Data should be consistent, possibly different format or additional details"
"MR50: Concurrency Handling", "Two clients POST conflicting data simultaneously to /items/123", "Race condition, one wins", "GET /items/123", "Should reflect one of the POSTs, not a mix"
